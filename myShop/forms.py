from flask_wtf import FlaskForm
from wtforms import StringField, PasswordField, SubmitField, SelectField, BooleanField, IntegerField, DateField
from wtforms.validators import DataRequired, Length, Email, EqualTo, ValidationError, Regexp
from myShop.models import User

class LoginForm(FlaskForm):
    email = StringField("Email", validators=[DataRequired(), Email()])
    password = PasswordField("Password", validators=[DataRequired()])
    submit = SubmitField("Login")
    
class RegistrationForm(FlaskForm):
    
    first_name = StringField("First Name", render_kw={"maxlength":"32"}, validators=[DataRequired(), Regexp('^([a-zA-Z\s]{1,32})$', message="Invalid input: field must only contain letters")])
    last_name = StringField("Last Name", render_kw={"maxlength":"32"}, validators=[DataRequired(), Regexp('^([a-zA-Z\s]{1,32})$', message="Invalid input: field must only contain letters")])
    email = StringField("Email", validators=[DataRequired(), Email()])
    confirm_email = StringField("Confirm Email", validators=[DataRequired(), EqualTo("email", message="Emails must match")])
    password = PasswordField("Password", render_kw={"minlength":"6", "maxlength":"28"}, validators=[DataRequired(), Regexp('^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{0,}$', message="Password must contain uppercase, lowercase letter, and number (e.g. Zy5xwv)")])
    confirm_password = PasswordField("Confirm Password", validators=[DataRequired(), EqualTo("password", message="Passwords must match")])
    
    submit = SubmitField("Create Account")
    
    def validate_email(self, email):
        user = User.query.filter_by(email=email.data).first()
        if user:
            raise ValidationError("This email is already registered. Please choose a different one.")

class CheckoutForm(FlaskForm):
    country_list = [('AFG', 'Afghanistan'),
                    ('ALA', 'Aland Islands'),
                    ('ALB', 'Albania'),
                    ('DZA', 'Algeria'),
                    ('ASM', 'American Samoa'),
                    ('AND', 'Andorra'),
                    ('AGO', 'Angola'),
                    ('AIA', 'Anguilla'),
                    ('ATA', 'Antarctica'),
                    ('ATG', 'Antigua and Barbuda'),
                    ('ARG', 'Argentina'),
                    ('ARM', 'Armenia'),
                    ('ABW', 'Aruba'),
                    ('AUS', 'Australia'),
                    ('AUT', 'Austria'),
                    ('AZE', 'Azerbaijan'),
                    ('BHS', 'Bahamas'),
                    ('BHR', 'Bahrain'),
                    ('BGD', 'Bangladesh'),
                    ('BRB', 'Barbados'),
                    ('BLR', 'Belarus'),
                    ('BEL', 'Belgium'),
                    ('BLZ', 'Belize'),
                    ('BEN', 'Benin'),
                    ('BMU', 'Bermuda'),
                    ('BTN', 'Bhutan'),
                    ('BOL', 'Bolivia, Plurinational State of'),
                    ('BES', 'Bonaire, Sint Eustatius and Saba'),
                    ('BIH', 'Bosnia and Herzegovina'),
                    ('BWA', 'Botswana'),
                    ('BVT', 'Bouvet Island'),
                    ('BRA', 'Brazil'),
                    ('IOT', 'British Indian Ocean Territory'),
                    ('BRN', 'Brunei Darussalam'),
                    ('BGR', 'Bulgaria'),
                    ('BFA', 'Burkina Faso'),
                    ('BDI', 'Burundi'),
                    ('KHM', 'Cambodia'),
                    ('CMR', 'Cameroon'),
                    ('CAN', 'Canada'),
                    ('CPV', 'Cape Verde'),
                    ('CYM', 'Cayman Islands'),
                    ('CAF', 'Central African Republic'),
                    ('TCD', 'Chad'),
                    ('CHL', 'Chile'),
                    ('CHN', 'China'),
                    ('CXR', 'Christmas Island'),
                    ('CCK', 'Cocos (Keeling) Islands'),
                    ('COL', 'Colombia'),
                    ('COM', 'Comoros'),
                    ('COG', 'Congo'),
                    ('COD', 'Congo, the Democratic Republic of the'),
                    ('COK', 'Cook Islands'),
                    ('CRI', 'Costa Rica'),
                    ('CIV', 'Cote d\'Ivoire'),
                    ('HRV', 'Croatia'),
                    ('CUB', 'Cuba'),
                    ('CUW', 'Curacao'),
                    ('CYP', 'Cyprus'),
                    ('CZE', 'Czech Republic'),
                    ('DNK', 'Denmark'),
                    ('DJI', 'Djibouti'),
                    ('DMA', 'Dominica'),
                    ('DOM', 'Dominican Republic'),
                    ('ECU', 'Ecuador'),
                    ('EGY', 'Egypt'),
                    ('SLV', 'El Salvador'),
                    ('GNQ', 'Equatorial Guinea'),
                    ('ERI', 'Eritrea'),
                    ('EST', 'Estonia'),
                    ('ETH', 'Ethiopia'),
                    ('FLK', 'Falkland Islands (Malvinas)'),
                    ('FRO', 'Faroe Islands'),
                    ('FJI', 'Fiji'),
                    ('FIN', 'Finland'),
                    ('FRA', 'France'),
                    ('GUF', 'French Guiana'),
                    ('PYF', 'French Polynesia'),
                    ('ATF', 'French Southern Territories'),
                    ('GAB', 'Gabon'),
                    ('GMB', 'Gambia'),
                    ('GEO', 'Georgia'),
                    ('DEU', 'Germany'),
                    ('GHA', 'Ghana'),
                    ('GIB', 'Gibraltar'),
                    ('GRC', 'Greece'),
                    ('GRL', 'Greenland'),
                    ('GRD', 'Grenada'),
                    ('GLP', 'Guadeloupe'),
                    ('GUM', 'Guam'),
                    ('GTM', 'Guatemala'),
                    ('GGY', 'Guernsey'),
                    ('GIN', 'Guinea'),
                    ('GNB', 'Guinea-Bissau'),
                    ('GUY', 'Guyana'),
                    ('HTI', 'Haiti'),
                    ('HMD', 'Heard Island and McDonald Islands'),
                    ('VAT', 'Holy See (Vatican City State)'),
                    ('HND', 'Honduras'),
                    ('HKG', 'Hong Kong'),
                    ('HUN', 'Hungary'),
                    ('ISL', 'Iceland'),
                    ('IND', 'India'),
                    ('IDN', 'Indonesia'),
                    ('IRN', 'Iran, Islamic Republic of'),
                    ('IRQ', 'Iraq'),
                    ('IRL', 'Ireland'),
                    ('IMN', 'Isle of Man'),
                    ('ISR', 'Israel'),
                    ('ITA', 'Italy'),
                    ('JAM', 'Jamaica'),
                    ('JPN', 'Japan'),
                    ('JEY', 'Jersey'),
                    ('JOR', 'Jordan'),
                    ('KAZ', 'Kazakhstan'),
                    ('KEN', 'Kenya'),
                    ('KIR', 'Kiribati'),
                    ('PRK', 'Korea, Democratic People\'s Republic of'),
                    ('KOR', 'Korea, Republic of'),
                    ('KWT', 'Kuwait'),
                    ('KGZ', 'Kyrgyzstan'),
                    ('LAO', 'Lao People\'s Democratic Republic'),
                    ('LVA', 'Latvia'),
                    ('LBN', 'Lebanon'),
                    ('LSO', 'Lesotho'),
                    ('LBR', 'Liberia'),
                    ('LBY', 'Libya'),
                    ('LIE', 'Liechtenstein'),
                    ('LTU', 'Lithuania'),
                    ('LUX', 'Luxembourg'),
                    ('MAC', 'Macao'),
                    ('MKD', 'Macedonia, the former Yugoslav Republic of'),
                    ('MDG', 'Madagascar'),
                    ('MWI', 'Malawi'),
                    ('MYS', 'Malaysia'),
                    ('MDV', 'Maldives'),
                    ('MLI', 'Mali'),
                    ('MLT', 'Malta'),
                    ('MHL', 'Marshall Islands'),
                    ('MTQ', 'Martinique'),
                    ('MRT', 'Mauritania'),
                    ('MUS', 'Mauritius'),
                    ('MYT', 'Mayotte'),
                    ('MEX', 'Mexico'),
                    ('FSM', 'Micronesia, Federated States of'),
                    ('MDA', 'Moldova, Republic of'),
                    ('MCO', 'Monaco'),
                    ('MNG', 'Mongolia'),
                    ('MNE', 'Montenegro'),
                    ('MSR', 'Montserrat'),
                    ('MAR', 'Morocco'),
                    ('MOZ', 'Mozambique'),
                    ('MMR', 'Myanmar'),
                    ('NAM', 'Namibia'),
                    ('NRU', 'Nauru'),
                    ('NPL', 'Nepal'),
                    ('NLD', 'Netherlands'),
                    ('NCL', 'New Caledonia'),
                    ('NZL', 'New Zealand'),
                    ('NIC', 'Nicaragua'),
                    ('NER', 'Niger'),
                    ('NGA', 'Nigeria'),
                    ('NIU', 'Niue'),
                    ('NFK', 'Norfolk Island'),
                    ('MNP', 'Northern Mariana Islands'),
                    ('NOR', 'Norway'),
                    ('OMN', 'Oman'),
                    ('PAK', 'Pakistan'),
                    ('PLW', 'Palau'),
                    ('PSE', 'Palestinian Territory, Occupied'),
                    ('PAN', 'Panama'),
                    ('PNG', 'Papua New Guinea'),
                    ('PRY', 'Paraguay'),
                    ('PER', 'Peru'),
                    ('PHL', 'Philippines'),
                    ('PCN', 'Pitcairn'),
                    ('POL', 'Poland'),
                    ('PRT', 'Portugal'),
                    ('PRI', 'Puerto Rico'),
                    ('QAT', 'Qatar'),
                    ('REU', 'Reunion'),
                    ('ROU', 'Romania'),
                    ('RUS', 'Russian Federation'),
                    ('RWA', 'Rwanda'),
                    ('BLM', 'Saint Barthelemy'),
                    ('SHN', 'Saint Helena, Ascension and Tristan da Cunha'),
                    ('KNA', 'Saint Kitts and Nevis'),
                    ('LCA', 'Saint Lucia'),
                    ('MAF', 'Saint Martin (French part)'),
                    ('SPM', 'Saint Pierre and Miquelon'),
                    ('VCT', 'Saint Vincent and the Grenadines'),
                    ('WSM', 'Samoa'),
                    ('SMR', 'San Marino'),
                    ('STP', 'Sao Tome and Principe'),
                    ('SAU', 'Saudi Arabia'),
                    ('SEN', 'Senegal'),
                    ('SRB', 'Serbia'),
                    ('SYC', 'Seychelles'),
                    ('SLE', 'Sierra Leone'),
                    ('SGP', 'Singapore'),
                    ('SXM', 'Sint Maarten (Dutch part)'),
                    ('SVK', 'Slovakia'),
                    ('SVN', 'Slovenia'),
                    ('SLB', 'Solomon Islands'),
                    ('SOM', 'Somalia'),
                    ('ZAF', 'South Africa'),
                    ('SGS', 'South Georgia and the South Sandwich Islands'),
                    ('SSD', 'South Sudan'),
                    ('ESP', 'Spain'),
                    ('LKA', 'Sri Lanka'),
                    ('SDN', 'Sudan'),
                    ('SUR', 'Suriname'),
                    ('SJM', 'Svalbard and Jan Mayen'),
                    ('SWZ', 'Swaziland'),
                    ('SWE', 'Sweden'),
                    ('CHE', 'Switzerland'),
                    ('SYR', 'Syrian Arab Republic'),
                    ('TWN', 'Taiwan, Province of China'),
                    ('TJK', 'Tajikistan'),
                    ('TZA', 'Tanzania, United Republic of'),
                    ('THA', 'Thailand'),
                    ('TLS', 'Timor-Leste'),
                    ('TGO', 'Togo'),
                    ('TKL', 'Tokelau'),
                    ('TON', 'Tonga'),
                    ('TTO', 'Trinidad and Tobago'),
                    ('TUN', 'Tunisia'),
                    ('TUR', 'Turkey'),
                    ('TKM', 'Turkmenistan'),
                    ('TCA', 'Turks and Caicos Islands'),
                    ('TUV', 'Tuvalu'),
                    ('UGA', 'Uganda'),
                    ('UKR', 'Ukraine'),
                    ('ARE', 'United Arab Emirates'),
                    ('GBR', 'United Kingdom'),
                    ('USA', 'United States'),
                    ('UMI', 'United States Minor Outlying Islands'),
                    ('URY', 'Uruguay'),
                    ('UZB', 'Uzbekistan'),
                    ('VUT', 'Vanuatu'),
                    ('VEN', 'Venezuela, Bolivarian Republic of'),
                    ('VNM', 'Vietnam'),
                    ('VGB', 'Virgin Islands, British'),
                    ('VIR', 'Virgin Islands, U.S.'),
                    ('WLF', 'Wallis and Futuna'),
                    ('ESH', 'Western Sahara'),
                    ('YEM', 'Yemen'),
                    ('ZMB', 'Zambia'),
                    ('ZWE', 'Zimbabwe')
                    ]
    
    cfirst_name = StringField("First Name", render_kw={"placeholder":"First Name"}, validators=[DataRequired(), Regexp('^([a-zA-Z\s]{1,32})$', message="First name must only contain letters")])
    clast_name = StringField("Last Name", render_kw={"placeholder":"Last Name"}, validators=[DataRequired(), Regexp('^([a-zA-Z\s]{1,32})$', message="Last name must only contain letters")])
    cemail = StringField("Email", render_kw={"placeholder":"Email Address"}, validators=[DataRequired(), Email()])
    address_line1 = StringField("Address Line 1", render_kw={"placeholder":"Address Line 1"}, validators=[DataRequired(), Length(min=4)])
    address_line2 = StringField("Address Line 2", render_kw={"placeholder":"Address Line 2 (optional)"})
    post_code = StringField("Post Code", render_kw={"placeholder":"Postcode"}, validators=[DataRequired(), Regexp('^([a-zA-Z0-9]{4,12})$', message="Invalid Post Code")])
    country = SelectField("Country", choices=country_list, default="GBR", validators=[DataRequired()])
    town = StringField("Town City", render_kw={"placeholder":"Town/City (optional)"},)
    name_on_card = StringField("Name on Card", render_kw={"placeholder":"Name on card", "maxlength":"20"}, validators=[DataRequired(), Regexp('^([a-zA-Z\s]{1,32})$', message="Field must only contain letters")])
    card_type = SelectField("Card Type", choices=[('', 'Card Type'), ('visa', 'Visa'), ('mastercard', 'MasterCard'), ('amex', 'AMEX')], default='')
    card_number = StringField("Card Number", render_kw={"placeholder":"Card number", "maxlength":"19"}, validators=[DataRequired(), Regexp('^(\d{4}-){3}\d{4}$|^(\d{4}){3}\d{4}$|^\d{16}$', message="Invalid Card number")])
    exp_month = DateField("Expiry Month", render_kw={"class":"exp_month","placeholder":"MM", "maxlength":"2"}, format='%m', validators=[DataRequired()])
    exp_year = DateField("Expiry Year", render_kw={"class": "exp_year","placeholder":"YY", "maxlength":"2"}, format='%y', validators=[DataRequired()])
    security_code = StringField("Security Code",  render_kw={"class":"cvc_code","placeholder":"CVC", "maxlength":"4"}, validators=[DataRequired(), Regexp('^([0-9]{3,4})$', message="CVC is invalid")])
    
    checkout = SubmitField("COMPLETE ORDER")
    

    
                    
                    